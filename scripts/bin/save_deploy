#!/bin/bash

################################################################################

# The MIT License (MIT)
#
# Copyright (c) 2016 St√©phane Desneux <sdx@iot.bzh>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

################################################################################

. /etc/xdtrc

# default values
MACHINE="m3ulcb"
EXCLUDE="*ostree* *otaimg *.tar.xz"
SRCDIR=""
DSTDIR="${XDT_DIR}/deploy"


function error() {
	echo "ERROR: $@" >&2
	exit 1
}

function usage() {
	cat <<EOF >&2
Usage: $(basename $BASH_SOURCE) [options]

Options:
   -m|--machine
      deploy machine
      default: $MACHINE
   -s|--source
      source directory (deploy dir)
      default: $SRCDIR
   -d|--destination
      destination directory
      default: $DSTDIR 
   -x|--exclude
      exclude pattern from deployment
      default: $EXCLUDE
   -h|--help
      get this help

Example:
	$0 -m m3ulcb
EOF
	exit 1
}

while (($#)); do
	case "$1" in
		-m|--machine)
			MACHINE="$2";
			shift 2;;
		-s|--source)
			SRCDIR="$2";
			shift 2;;
		-d|--destination)
			DSTDIR="$2";
			shift 2;;
		-x|--exclude)
			EXCLUDE="$2";
			shift 2;;
		-h|--help)
			HELP=1;
			shift;
			break;;
		--)
			shift;
			break;;
		*)
			usage
			;;
	esac
done

[[ -z "$SRCDIR" ]] && SRCDIR="${XDT_BUILD}/${MACHINE}/tmp/deploy/"

[[ "$HELP" == 1 ]] && usage

[[ ! -d "${SRCDIR}" ]] && error "No source directory for board ${MACHINE} ($SRCDIR)"
SRCDIR=$(realpath ${SRCDIR})

[[ ! -d "${DSTDIR}" ]] && error "Invalid destination directory $DSTDIR"
DSTDIR=$(realpath ${DSTDIR})


IMGDIR="$SRCDIR/images/${MACHINE}/"
[[ ! -d "$IMGDIR" ]] && error "No image dir found at $IMGDIR" 

# locate image
pushd $IMGDIR &>/dev/null
	lnkname=$(find . -type l -name "*.wic.xz")
	[[ -z "$lnkname" ]] && lnkname=$(find . -type l -name "*.wic.vmdk") # exception for qemu
	[[ ! -e $lnkname ]] && error "No image link found in $IMGDIR" || echo "Found image link $lnkname"
	imgfile=$(readlink $lnkname)
	[[ ! -f $imgfile ]] && error "No image found in $IMGDIR" || echo "Found image file $imgfile"
popd &>/dev/null

# locate SDK (optional)
SDKDIR="$SRCDIR/sdk/"
[[ -d $SDKDIR ]] && {
	pushd $SDKDIR &>/dev/null
		sdkfile=$(find . -type f -name "poky-*.sh")
		[[ ! -f $sdkfile ]] && error "Unable to find SDK file in $SDKDIR"
	popd &>/dev/null
}

# determine version
[[ "$imgfile" =~ -([0-9]+)\.rootfs\.wic\..+$ ]] && VERSION=${BASH_REMATCH[1]} || error "Unable to find image version"
echo "Found version $VERSION"

# create destination dir
SAVEDIR="${DSTDIR}/${MACHINE}-${VERSION}/"
mkdir -p ${SAVEDIR}

RSYNCEXCLUDE=""
echo "Exclusion pattern: ${EXCLUDE}"
for e in ${EXCLUDE}; do
	RSYNCEXCLUDE="${RSYNCEXCLUDE} --exclude "$e" "
done

BASESAVEDIR=$(basename "${SAVEDIR}")
DIRSAVEDIR=$(dirname "${SAVEDIR}")

echo "Syncing $IMGDIR to $SAVEDIR..."
rsync -a --delete ${RSYNCEXCLUDE} ${IMGDIR}/ ${SAVEDIR}/
[[ -n "$sdkfile" ]] && { echo "Syncing SDK file $sdkfile to $SAVEDIR"; rsync -a ${SDKDIR}/$sdkfile ${SAVEDIR}/; }

if [[ -L ${DIRSAVEDIR}/${MACHINE} ]]; then
	rm ${DIRSAVEDIR}/${MACHINE}
fi
if [[ ! -e ${DIRSAVEDIR}/${MACHINE} ]]; then
	ln -sf ${BASESAVEDIR} ${DIRSAVEDIR}/${MACHINE}
fi

echo "Image saved in $SAVEDIR"
