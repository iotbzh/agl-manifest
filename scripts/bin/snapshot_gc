#!/bin/bash

################################################################################

# The MIT License (MIT)
#
# Copyright (c) 2016 St√©phane Desneux <sdx@iot.bzh>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

################################################################################

# load libzh
. $(dirname $BASH_SOURCE)/libzh.sh

TOPDIR="${XDT_DIR}/deploy"
PATTERN="^.*$"

usage() {
	cat <<EOF >&2
Usage: $(basename $BASH_SOURCE) [options]

Options:
   -d|--dir
      top directory to cleanup
      current value: $TOPDIR 
   -p|--pattern
      only consider subdirs matching specified regexp
      current value: $PATTERN 
   -h|--help
      get this help

Example:
	$0 -m 'm3ulcb_2017.*'
EOF
	exit 1
}

tmp=$(getopt -o d:p:h --long dir:,pattern:,help -n $(basename $BASH_SOURCE) -- "$@")
[[ $? != 0 ]] && { usage; exit 1; }
eval set -- $tmp
while true; do
	case "$1" in 
		-d|--dir)
			TOPDIR="$2";
			shift 2;;
		-p|--pattern)
			PATTERN="$2";
			shift 2;;
		-h|--help)
			HELP=1;
			shift;
			break;;
		--) shift; break;;
		*) fatal "Internal error";;
	esac
done

[[ "$HELP" == 1 ]] && usage

info "Top dir: $TOPDIR"
info "Pattern: $PATTERN"

pushd $TOPDIR &>/dev/null || fatal "Invalid directory $TOPDIR" #{

	# list all objects matching pattern and beeing a folder
	obj=$(find . -mindepth 1 -maxdepth 1 -type d)
	echo $obj 

popd &>/dev/null #}

function dt() {
	res=$(date +%Y%m%d -d "$@")
	#log "$@": $res 
	echo $res
}

# build the list of accepted dates, beyond last week
start=$(dt "now")

dates=$start
dates="$dates /"

for x in $(seq 1 14); do dates="$dates $(dt "$start -$x days")"; done
dates="$dates /"

for x in $(seq 1 6); do dates="$dates $(dt "$start -$x weeks")"; done


# debug
for x in $dates; do
	[[ $x == "/" ]] && { echo "---"; continue; }
	echo $x:$(date "+%Y%m%d %a" -d $x)
done
echo $dates
